openapi: 3.0.3
info:
  title: Пользовательский интерфейс платформы
  description: Пользовательский интерфейс платформы
  version: 1.0.0
servers:
  - url: 'http://localhost/'
tags:
  - name: Публичное
    description: Публично доступные страницы
  - name: Профиль
    description: Просмотр профиля участника
  - name: Админка
    description: Редактирование прав и пользователей
  - name: Редактор
    description: Редактирование контента
  - name: Контент
    description: Просмотр и поиск контента
  - name: Игровые комнаты
    description: Просмотр, поиск игровых комнат и проведение игр
components:
  securitySchemes:
    oAuth:
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow. [More info](https://api.example.com/docs/auth)
      flows:
        implicit:
          authorizationUrl: https://api.example.com/oauth2/authorize
          scopes:
            viewProfile: просматривать профиль
            manageUsers: управлять пользователями
            editContent: редактировать контент
            searchRooms: искать игровые комнаты
            editRooms: редактировать игровые комнаты
            hostGame: вести игры
            playGame: играть в игры
  parameters:
    contentId:
      name: contentId
      in: path
      required: true
      description: Идентификатор контента
      schema:
        type: string
        format: uuid
    type:
      name: type
      in: path
      required: true
      description: Тип контента
      schema:
        type: string
    roomId:
      name: roomId
      in: path
      required: true
      description: Идентификатор игровой комнаты
      schema:
        type: string
        format: uuid
    userId:
      name: userId
      in: path
      required: true
      description: Идентификатор пользователя
      schema:
        type: string
        format: uuid

  responses:
    Page: #200
      description: Верстка запрошенной страницы
      content:
        text/html:
          schema:
            type: string
            example: <html>...</html>
    RedirectTo: #302
      description: Перенаправление на страницу
      headers:
        Location:
          description: Адрес целевой страницы
          schema:
            type: string
            example: /
    BadRequest: #400
      description: Сообщение о некорректных параметрах в запросе
      content:
        text/html:
          schema:
            type: string
            example: <html><head><title>Некорректный адрес...</html>
    NeedAuthentication: #401
      description: Сообщение о доступе только для аутентифицированных
      content:
        text/html:
          schema:
            type: string
            example: <html><head><title>Доступ только для вошедших...</html>
    Forbidden: #403
      description: Сообщение об отсутствии доступа
      content:
        text/html:
          schema:
            type: string
            example: <html><head><title>Не хватает прав...</html>
    NotFound: #404
      description: Сообщение об ненайденой требуемой сущности
      content:
        text/html:
          schema:
            type: string
            example: <html><head><title>Объект не найден...</html>
paths:
  /:
    get:
      operationId: getIndexPage
      description: Получение главной страницы
      summary: Получение главной страницы
      tags: [ Публичное ]
      responses:
        200:
          $ref: "#/components/responses/Page"
  /login:
    get:
      operationId: getLoginPage
      description: Получение страницы входа
      summary: Получение страницы входа
      tags: [ Публичное ]
      responses:
        200:
          $ref: "#/components/responses/Page"
  /logout:
    get:
      operationId: getLogoutPage
      description: Получение страницы выхода
      summary: Получение страницы выхода
      tags: [ Публичное ]
      responses:
        302:
          $ref: "#/components/responses/RedirectTo"
  /profile:
    get:
      operationId: getMyProfilePage
      description: Получение страницы профиля текущего пользователя
      summary: Получение страницы профиля текущего пользователя
      tags: [ Профиль ]
      security: [ oAuth: [ playGame, hostGame ] ]
      responses:
        200:
          $ref: "#/components/responses/Page"
        401:
          $ref: "#/components/responses/NeedAuthentication"
  /profile/{userId}:
    get:
      operationId: getProfilePage
      description: Получение страницы профиля указанного пользователя
      summary: Получение страницы профиля указанного пользователя
      tags: [ Профиль ]
      security: [ oAuth: [ playGame, hostGame ] ]
      parameters:
        - $ref: "#/components/parameters/userId"
      responses:
        200:
          $ref: "#/components/responses/Page"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/NeedAuthentication"
        404:
          $ref: "#/components/responses/NotFound"
  /admin:
    get:
      operationId: getAdminPage
      description: Получение страницы админки
      summary: Получение страницы админки
      tags: [ Админка ]
      security: [ oAuth: [ manageUsers ] ]
      responses:
        200:
          $ref: "#/components/responses/Page"
        401:
          $ref: "#/components/responses/NeedAuthentication"
        403:
          $ref: "#/components/responses/Forbidden"
  /admin/user/{userId}:
    get:
      operationId: getUserPage
      description: Получение страницы админки
      summary: Получение страницы админки
      tags: [ Админка ]
      security: [ oAuth: [ manageUsers ] ]
      parameters:
        - $ref: "#/components/parameters/userId"
      responses:
        200:
          $ref: "#/components/responses/Page"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/NeedAuthentication"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
  /editor:
    get:
      operationId: getEditorPage
      description: Получение страницы редактора
      summary: Получение страницы редактора
      tags: [ Редактор ]
      security: [ oAuth: [ playGame, hostGame ] ]
      responses:
        200:
          $ref: "#/components/responses/Page"
        401:
          $ref: "#/components/responses/NeedAuthentication"
        403:
          $ref: "#/components/responses/Forbidden"
  /editor/{type}/{contentId}:
    get:
      operationId: getEditorcontentPage
      description: Получение страницы редактора с определенным контентом
      summary: Получение страницы редактора с определенным контентом
      tags: [ Редактор ]
      security: [ oAuth: [ playGame, hostGame ] ]
      parameters:
        - $ref: "#/components/parameters/type"
        - $ref: "#/components/parameters/contentId"
      responses:
        200:
          $ref: "#/components/responses/Page"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/NeedAuthentication"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
  /rooms:
    get:
      operationId: getRoomSearchPage
      description: Получение страницы c поиском игровых комнат
      summary: Получение страницы c поиском игровых комнат
      tags: [ Игровые комнаты ]
      security: [ oAuth: [ playGame, hostGame ] ]
      responses:
        200:
          $ref: "#/components/responses/Page"
        401:
          $ref: "#/components/responses/NeedAuthentication"
        403:
          $ref: "#/components/responses/Forbidden"
  /room/{roomId}:
    get:
      operationId: getRoomPage
      description: Получение страницы с игровой комнатой
      summary: Получение страницы с игровой комнатой
      tags: [ Игровые комнаты ]
      security: [ oAuth: [ playGame, hostGame ] ]
      parameters:
        - $ref: "#/components/parameters/roomId"
      responses:
        200:
          $ref: "#/components/responses/Page"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/NeedAuthentication"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
  /game/{roomId}:
    get:
      operationId: getGamePage
      description: Получение страницы с запущенной игрой в игровой комнате
      summary: Получение страницы с запущенной игрой в игровой комнате
      tags: [ Игровые комнаты ]
      security: [ oAuth: [ playGame, hostGame ] ]
      parameters:
        - $ref: "#/components/parameters/roomId"
      responses:
        200:
          $ref: "#/components/responses/Page"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/NeedAuthentication"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
  /content:
    get:
      operationId: getContentSearchPage
      description: Получение страницы со списком контента
      summary: Получение страницы со списком контента
      tags: [ Контент ]
      security: [ oAuth: [ playGame, hostGame ] ]
      responses:
        200:
          $ref: "#/components/responses/Page"
        401:
          $ref: "#/components/responses/NeedAuthentication"
        403:
          $ref: "#/components/responses/Forbidden"
  /content/{type}/{contentId}:
    get:
      operationId: getContentPage
      description: Получение страницы с описанием и обзором единицы контента
      summary: Получение страницы с описанием и обзором единицы контента
      tags: [ Контент ]
      security: [ oAuth: [ playGame, hostGame ] ]
      parameters:
        - $ref: "#/components/parameters/type"
        - $ref: "#/components/parameters/contentId"
      responses:
        200:
          $ref: "#/components/responses/Page"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/NeedAuthentication"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
