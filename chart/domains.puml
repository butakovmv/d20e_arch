@startuml
object "Генератор" as Generator {
    f(): получить обрабатываемый тип
    f(): получить список параметров объекта Х
    f(): получить список значений для параметра Y объекта Х
    f(): создать объект с выбранными параметрами и значениями
    --
    f(): создать заготовку объекта
    f(): создать объект из заготовки
}

object "Игровая комната" as Room {
    f(): создать
    f(): получить по id
    f(): поиск по критериям
    f(): обновить
    f(): удалить
    --
    f(): архивировать
    f(): восстановить
    --
    f(): запрос присоединения
    f(): одобрить запрос
    ---
    f(): получить список участников
    f(): получить список объектов
    f(): внести игровое событие
}

object "Игровой объект" as Object {
    f(): создать
    f(): получить по id
    f(): поиск по критериям
    f(): обновить
    f(): удалить
}

object "Контент книг" as Content {
    f(): создать объект типа Х
    f(): получить по id
    f(): поиск по критериям
    f(): обновить
    f(): удалить
}
object "Обучение" as Learn {
    f(): создать шаг обучения
    f(): поиск шагов обучения по критерию()
    f(): получить шаг обучения()
    f(): изменить шаг обучения()
    f(): удалить шаг обучения()
}
object "Персонаж" as Hero {
    f(): создать
    f(): получить по id
    f(): поиск по критериям
    f(): обновить
    f(): удалить
}
object "Подсказка" as Hint {
    f(): создать
    f(): получить по id
    f(): обновить
    f(): удалить
    --
    f(): запросить подсказки под ситуацию
}
object "Пользователь" as User {
    f(): зарегистрировать
    f(): получить по id
    f(): обновить
    --
    f(): отметить шаг обучения как пройденный
}

object "Запись о событии" as Log {
    f(): записать в комнату
    f(): поиск по критерию
}

User --> Hero
User --o Room
Object --o Room
Log --o Room
Object --> Content
Generator ---> Object
Hero --|> Object : один из
@enduml
